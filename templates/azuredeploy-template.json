{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "className": {
      "type": "string",
      "defaultValue": "ctsws"
    },
    "numInstances": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "Number of instances to create"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "admin",
      "metadata": {
        "description": "User Name for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "SysdigCTS!",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "This is the size of your VM"
      }
    },
    "imageName": {
      "type": "string",
      "metadata": {
        "description": "Name of the image to base virtualMachines on."
      }
    },
    "imageRG": {
      "type": "string",
      "metadata": {
        "description": "Resource Group where the VM image resides."
      }
    }
  },
  "variables": {
    "imageID": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('imageRG'),'/providers/Microsoft.Compute/images/',parameters('imageName'))]",
    "publicIPAddressName": "[concat(parameters('className'),'IP')]",
    "dnsLabelPrefix": "[parameters('className')]",
    "vmName": "[parameters('className')]",
    "vnetName": "[concat(parameters('className'),'VNET')]",
    "subnetName": "[concat(parameters('className'),'SubNET')]",
    "addressPrefix": "10.0.0.0/24",
    "subnetPrefix": "10.0.0.0/24",
    "nsgName": "[concat(parameters('className'),'NSG')]",
    "nicName": "[concat(parameters('className'),'Nic')]",
    "publicIPAddressType": "Dynamic",
    "apiVersion": "2015-06-15"
  },
  "resources": [
        {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "web_rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "https_rule",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          }
        ]
      }
    },    
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('dnsLabelPrefix'),copyIndex())]"
        }
      },
      "copy": {
        "name": "PublicIPcopy",
        "count": "[parameters('numInstances')]"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'),copyIndex())]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]",
        "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName')),'/subnets/',variables('subnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex()))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName')),'/subnets/',variables('subnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      },
      "copy": {
        "name": "NICcopy",
        "count": "[parameters('numInstances')]"
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'),copyIndex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'),copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": { 
          "imageReference": { 
            "id": "[variables('imageID')]"
          }, 
          "osDisk": { 
            "name": "[concat(variables('vmName'),'osDisk',copyIndex())]",
            "caching": "ReadWrite", 
            "createOption": "FromImage" 
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "copy": {
        "name": "vmcopy",
        "count": "[parameters('numInstances')]"
      }
    }
  ]
}